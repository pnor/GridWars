################### Issues with Current AI ########################################
- Doesnt know status effects well (no real distinction between varying intensities of effects)
- Doesn't account for effect durations
- Doesnt account for healing sp
- Turn Order not accounted for (not really)
- Doesn't account for things not having status effect component

Possible Suggestions
~ Make it choose 2nd or 3rd best move occasionally





Standard Winning Criteria ---

Defeat all opponents

Ways to Kill Opponents Better
- Deal Damage
- Inflict Negative Statuses
- Avoid being in range of damage



Zone Winning Criteria ---

Land on Zone

Ways to get Zones Better
- Move closer to zone
- Avoid getting killed
- Inflict Negative statuses



Possible Moves for One Entity ---
- Move to any possible space or NOT move
- Attack using one of 4 moves or NOT attack


ORDER of AI Operation (mk 1?)
- decide what moves for all entities
- return object representing moves
- play through each move
- end turn


Objects Needed
- AI Player object (to store information about current best moves. Where minmax/alphabeta pruning will be)
    + iterate through each entity (speed order, lowest to highest) then get best move
    + returns best move per entity
    + capable of looking at Move Objects and the Board to determine best movement
- Move Object (to represent each move)
    + get Array<Moves> to iterate through to get best




 Drafting for the Recursive Algorithm

 simpleBest ->
 	for (each entity)
 		get All Turns for it
 		Try all turns ->
 			Try turn
 			if (can go deeper) {
 			simpleBest on resulting boardState
 			try resulting turns from simpleBest
 			} else
 			evaluate

 		see which returns highest



